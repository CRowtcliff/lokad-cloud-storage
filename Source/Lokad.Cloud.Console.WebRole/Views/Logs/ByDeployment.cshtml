@model Lokad.Cloud.Console.WebRole.Models.Logs.LogsModel
@{ ViewBag.Title = "Lokad.Cloud Administration Console - Logs"; }

@section Header {
	<link href="@Url.Content("~/Content/ui.slider.extras.css")" rel="stylesheet" type="text/css" />
	<script src="@Url.Content("~/Scripts/selectToUISlider.jQuery.js")" type="text/javascript"></script>
}

<h1>Logs</h1>
<p>Use the slider below to choose the threshold level for filtering out less important log entries.</p>

<fieldset>
	<select name="loglevel" id="loglevel">
		<option value="Debug">Debug</option>
		<option value="Info" selected="selected">Info</option>
		<option value="Warn">Warning</option>
		<option value="Error">Error</option>
		<option value="Fatal">Fatal</option>
	</select>
</fieldset>

<table class="table" id="datatable">
	<thead>
		<tr>
			<th>Date</th>
			<th></th>
			<th>Message</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Entries) {
			<tr>
				<td>@item.DateTimeUtc</td>
				<td>@Html.LogLevelIcon(item.Level)</td>
				<td>@item.Message
				@if (!String.IsNullOrWhiteSpace(item.Error)) {
					<text>
					<br />
					<b>Exception Details and Stack:</b> (<a href="#" class="toggleLink">Show/Hide</a>)<br />
					<span class="toggle"><pre><small>@item.Error</small></pre></span>
					</text>
				}
				</td>
			</tr>
		}
	</tbody>
</table>

<p id="loadMoreButton" style="margin-top: 1.5em;"><a href="#">Load More</a></p>

<script type="text/javascript">

	newestToken = '@Model.NewestToken';
	oldestToken = '@Model.OldestToken';
	count = @Model.Entries.Length;

	function UpdateMoreAvailable(moreAvailable) {
		if(moreAvailable) $("#loadMoreButton").show();
		else $("#loadMoreButton").hide();
	}

	function FormatLogEntryHtml(entry) {
		var message = entry.message;
		if(entry.error) {
			message +=  '<br /><b>Exception Details and Stack:</b> (<a href="#" class="toggleLink">Show/Hide</a>)<br /><span class="toggle"><pre><small>' + entry.error + '</small></pre></span>';
		}
		return '<tr><td>' + entry.date + '</td><td>@Html.LogLevelIconClientScript("entry.level")</span></td><td>' + message + '</td></tr>';
	}

	// TODO: Refactor

	$(document).ready(function() {

		UpdateMoreAvailable(@Model.MoreAvailable.ToString().ToLower());

		$('select#loglevel').selectToUISlider({ labels: 5, sliderOptions: { change:function() {
			$('#AjaxLoading').show();
			$.ajax({
				url: '/Logs/@ViewBag.Navigation.CurrentDeploymentName/EntriesAfterJson?skip=0&threshold=' + $('select#loglevel').val(),
				dataType: 'json',
				cache: false,
				success: function (data) {
					tableBody = $("#datatable > tbody");
					tableBody.empty();
					newestToken = data.newestToken;
					oldestToken = data.oldestToken;
					count = data.entries.length;
					UpdateMoreAvailable(data.moreAvailable);
					$.each(data.entries, function (index, entry) { tableBody.append(FormatLogEntryHtml(entry)) });
					$('#AjaxLoading').hide();
				}
			});
		}}}).hide();

		$('#loadMoreButton > a').click(function() {
			$('#AjaxLoading').show();
			$.ajax({
				url: '/Logs/@ViewBag.Navigation.CurrentDeploymentName/EntriesAfterJson?skip=' + count + '&oldestToken=' + oldestToken + '&threshold=' + $('select#loglevel').val(),
				dataType: 'json',
				cache: false,
				success: function (data) {
					last = $("#datatable > tbody");
					oldestToken = data.oldestToken;
					count += data.entries.length;
					UpdateMoreAvailable(data.moreAvailable);
					$.each(data.entries, function (index, entry) { last.append(FormatLogEntryHtml(entry)) });
					$('#AjaxLoading').hide();
				}
			});
			return false;
		});

		$('.toggleLink').live('click', function() {
			$(this).siblings('.toggle').toggle();
			return false;
		});
	});
</script>

