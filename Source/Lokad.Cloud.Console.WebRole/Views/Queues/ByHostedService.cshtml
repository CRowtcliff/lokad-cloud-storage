@model Lokad.Cloud.Console.WebRole.Models.Queues.QueuesModel
@{ ViewBag.Title = "Lokad.Cloud Administration Console - Queues"; }

@section Header {
	<script src="http://ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/knockout-1.1.2.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/knockout.mapping.js")" type="text/javascript"></script>
}

<h1>Queue Workload</h1>
<p>This table reports the workload in the various queues of the account</p>

<table class="table">
	<tr>
		<th>Queue</th>
		<th>Messages</th>
		<th>Latency</th>
	</tr>

	@foreach (var item in Model.Queues) {
		<tr>
			<td>@item.QueueName</td>
			<td>@item.MessageCount</td>
			<td>@item.Latency</td>
		</tr>
	}

</table>

<h2>Quarantine: Failing Messages</h2>
<p>
	Messages which fail repeatedly are persisted and removed from the queue in order to keep it healthy.
</p>
<div data-bind="visible: qQueues().length == 0">
	No message has been considered as failing so far.
</div>
<div data-bind="visible: qQueues().length > 0">
	The following messages have been considered as failing. Note that persisted messages may become unrestorable if their originating queue is deleted. No more than 50 messsages are shown at a time.
</div>

<div data-bind='template: { name: "qQueueTemplate", foreach: qQueues, beforeRemove: function(e) { $(e).slideUp() }, afterAdd: function(e) { $(e).hide().slideDown() } }'></div>

<script type="text/html" id="qQueueTemplate">
	<h3>Queue: ${queueName} &nbsp;&nbsp;
		<button data-bind="click: function() { restoreQQueue($data) }">Restore All</button>
		<button data-bind="click: function() { removeQQueue($data) }">Delete All</button>
	</h3>
	<div data-bind='template: { name: "qMessageTemplate", foreach: qMessages, beforeRemove: function(e) { $(e).slideUp() }, afterAdd: function(e) { $(e).hide().slideDown() } }'></div>
</script>

<script type="text/html" id="qMessageTemplate">
	<div class="groupbox">
		<p>Inserted ${ inserted } and removed ${removed} &nbsp;&nbsp;
			<button data-bind="click: function() { restoreQMessage($data) }">Restore</button>
			<button data-bind="click: function() { removeQMessage($data) }">Delete</button>
		</p>
		<pre>${content}</pre>
		Reason:
		<pre>${reason}</pre>
	</div>
</script>

<script type="text/javascript">

	var model = { qQueues: [
		@for (int i = 0; i < Model.Quarantine.Length; i++) {
				var queue = Model.Quarantine[i];
			<text>
				@if (i > 0) { <text>,</text> }
				{ queueName: "@queue.QueueName", qMessages: [
				@for (int j = 0; j < queue.Messages.Length; j++) {
					var message = queue.Messages[j];
					<text>
					@if (j > 0) { <text>,</text> }
					{ key: "@message.Key", inserted: "@message.Inserted", removed: "@message.Persisted", content: @Html.Enquote(message.Content), reason: @Html.Enquote(message.Reason) }
					</text>
				}]}
			</text>
		}
	]};

	var viewModel = ko.mapping.fromJS(model);

	removeQQueue = function(queue) {
		while(message = queue.qMessages.pop()) {
			ajaxDeleteQMessage(message);
		}
		viewModel.qQueues.remove(queue);
	};
	removeQMessage = function(message) {
		ajaxDeleteQMessage(message);
		var queue = queueOfMessage(message);
		queue.qMessages.remove(message);
		if (queue.qMessages().length == 0) {
			viewModel.qQueues.remove(queue);
		}
	};

	restoreQQueue = function(queue) {
		while(message = queue.qMessages.pop()) {
			ajaxRestoreQMessage(message);
		}
		viewModel.qQueues.remove(queue);
	};
	restoreQMessage = function(message) {
		ajaxRestoreQMessage(message);
		var queue = queueOfMessage(message);
		queue.qMessages.remove(message);
		if (queue.qMessages().length == 0) {
			viewModel.qQueues.remove(queue);
		}
	};

	queueOfMessage = function(message) {
		var queue;
		$.each(viewModel.qQueues(), function(i,q) { if (q.qMessages.indexOf(message) >= 0) { queue = q; } });
		return queue;
	};

	ajaxDeleteQMessage = function(message) {
		$('#AjaxLoading').show();
		$.ajax({
			url: '@ViewBag.TenantPath/JsonQuarantinedMessage/' + message.key(),
			type: 'DELETE',
			dataType: 'json',
			cache: false,
			success: function (data) {
				$('#AjaxLoading').hide();
			}
		});
	};
	ajaxRestoreQMessage = function(message) {
		$('#AjaxLoading').show();
		$.ajax({
			url: '@ViewBag.TenantPath/JsonRestoreQuarantinedMessage/' + message.key(),
			type: 'POST',
			dataType: 'json',
			cache: false,
			success: function (data) {
				$('#AjaxLoading').hide();
			}
		});
	};

	$(document).ready(function () {
		ko.applyBindings(viewModel);
	});
</script>